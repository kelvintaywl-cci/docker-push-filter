version: 2.1

commands:
  build-docker-image:
    parameters:
      dockerfile:
        type: string
      tag:
        type: string
      context:
        type: string
        default: '.'
    steps:
      - run:
          name: Build image << parameters.tag >>
          command: |
            docker image build --tag << parameters.tag >> --file << parameters.dockerfile >> << parameters.context >>
  push-docker-images:
    parameters:
      filter-string:
        type: string
    steps:
      - run:
          name: (Mock) Push images with filter << parameters.filter-string >>
          command: |
            # push only images with << parameters.filter-string >> filter
            for docker_img in $(docker image list --format "{{.Repository}}:{{.Tag}}" --filter << parameters.filter-string >>)
            do
              echo "mock docker push ${docker_img}"
            done        

jobs:
  build:
    docker:
      - image: cimg/base:2021.01
    resource_class: medium
#     environment:
#       # remote Docker daemon open
#       DOCKER_HOST: 'tcp://3.26.62.240:2375'
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "41:99:21:4f:f4:67:8a:fb:86:89:c1:fd:82:63:eb:2c"
      - run: |
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-3-26-62-240.ap-southeast-2.compute.amazonaws.com uptime
      - run: |
          docker context create \
            --docker host=ssh://ubuntu@ec2-3-26-62-240.ap-southeast-2.compute.amazonaws.com \
            --description="Remote engine" \
            my-remote-engine
            
          docker context use my-remote-engine
          
          docker info

#       - run: |
#           docker image list --format '{{.Repository}}:{{.Tag}}'
#       - run: |
#           docker image build --tag kelvintaywl-cci/foo:123 --file ./Dockerfile.foo .
#       - build-docker-image:
#           tag: kelvintaywl-cci/foo:123
#           dockerfile: ./Dockerfile.foo
#       - build-docker-image:
#           tag: kelvintaywl-cci/bar:456
#           dockerfile: ./Dockerfile.bar   
#       - run: |
#           # check all images, both pulled and built
#           docker image list --format '{{.Repository}}:{{.Tag}}'
#       - push-docker-images:
#           filter-string: label=maintainer=foo@example.com
#       - push-docker-images:
#           filter-string: label=maintainer=bar@example.com
